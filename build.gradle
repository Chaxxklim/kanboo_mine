plugins {
    id 'org.springframework.boot' version '2.5.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    id "com.ewerk.gradle.plugins.querydsl" version '1.0.10'
}


group = 'com.kanboo.www'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'javax.xml.bind:jaxb-api'
    ommons-io', name: 'commons-io', version: '2.4'
    implementation group: 'com.aspose', name: 'aspose-cells', version: '20.3'
    implementation group: 'com.aspose', name: 'aspose-pdf', version: '20.3'
    implementation group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    implementation 'com.querydsl:querydsl-jpa'

    implementation 'commons-io:commons-io:2.4'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.9.0'
//    균창 추가 의존성
    implementation group: 'org.apache.poi', name: 'poi', version: '3.9'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '3.9'
    compile group: 'c


// 균창 끝
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

//compileQuerydsl.doFirst {
//    if(file(querydslDir).exists() ) {
//        delete(file(querydslDir))
//    }
//}